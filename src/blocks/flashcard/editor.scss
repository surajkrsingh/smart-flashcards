/**
 * The following styles get applied inside the editor only.
 *
 * Replace them with your own styles or remove the file completely.
 */

.wp-block-create-block-smart-flashcards {
    border: 1px dotted #f00;
    background-color: #090;
    color: #fff !important;
    padding: 20px;
}

// Make this button rounded and and floating style with shadow.
.smfcs-flashcard-control-button {
    position: absolute;
    right: 2rem;
    top: 2rem;
    border-radius: 50%;
    width: 2.5rem !important;
    height: 2.5rem !important;
    display: flex !important;
    justify-content: center;
    align-items: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    z-index: 100;
    opacity: 1 !important;
    visibility: visible !important;
    background: #fff !important;
    border: 1px solid #ddd !important;

    &:hover {
        background: #f8f8f8 !important;
        transform: scale(1.05);
    }

    svg {
        width: 20px;
        height: 20px;
        fill: currentColor;
    }
}

.wp-block-smfcs-flashcard {
    width: var(--flashcard-width, 100%);
    min-height: var(--flashcard-height, 300px);
    margin: 1rem auto;
    box-sizing: border-box;

    .flashcard {
        width: 100%;
        min-height: 100%;
        margin: 0;
        position: relative;
    }

    .flashcard-inner {
        position: relative;
        width: 100%;
        min-height: 100%;
        background: #fff;
        border-radius: 8px;
        overflow: visible;

        // Remove all transform styles in editor
        transform: none !important;
        transform-style: flat !important;
        transition: none !important;
    }

    // Front and back sides visibility in editor
    .wp-block-smfcs-flashcard-front,
    .wp-block-smfcs-flashcard-back {
        position: relative;
        width: 100%;
        min-height: 200px;
        display: none; // Hidden by default
        border: 1px solid #ddd;
        border-radius: 8px;
        margin: 0 auto;
        padding: 2rem;
        box-sizing: border-box;

        // Remove all transform properties
        transform: none !important;
        backface-visibility: visible !important;
    }

    // Show/hide based on active side - Updated selectors
    &:has(.flashcard-inner.flashcard-front) {
        .wp-block-smfcs-flashcard-front {
            display: block;
        }

        .wp-block-smfcs-flashcard-back {
            display: none;
        }
    }

    &:has(.flashcard-inner.flashcard-back) {
        .wp-block-smfcs-flashcard-front {
            display: none;
        }

        .wp-block-smfcs-flashcard-back {
            display: block;
        }
    }

    // Selected block styles
    .block-editor-block-list__block {

        &.is-selected,
        &.has-child-selected {
            outline: 2px solid #007cba;
        }
    }
}

// Override frontend styles specifically for editor
.editor-styles-wrapper .wp-block-smfcs-flashcard {

    // Reset frontend styles that affect editor
    .flashcard-inner {
        transform: none !important;
        transform-style: flat !important;
        transition: none !important;
        padding: 16px;
    }

    // Override frontend display properties for both sides
    .wp-block-smfcs-flashcard-front,
    .wp-block-smfcs-flashcard-back {
        display: none !important; // Use !important to override frontend styles
        position: relative !important;
        transform: none !important;
        backface-visibility: visible !important;
    }

    // Show active side using higher specificity
    &:has(.flashcard-inner.flashcard-front) {
        .wp-block-smfcs-flashcard-front {
            display: block !important;
        }
    }

    &:has(.flashcard-inner.flashcard-back) {
        .wp-block-smfcs-flashcard-back {
            display: block !important;
        }
    }

    // Rest of your editor-specific styles...
}

// Editor styles - No flipping, just show/hide
.editor-styles-wrapper .wp-block-smfcs-flashcard {
    .flashcard-inner {
        position: relative;
        width: 100%;
        transition: none !important;
    }

    .wp-block-smfcs-flashcard-front,
    .wp-block-smfcs-flashcard-back {
        position: relative !important;
        backface-visibility: visible !important;
        transform: none !important;
        z-index: 1;
        min-height: 200px;
        margin-bottom: 0 !important;

        // Ensure border styles are visible
        &[class*="border-style-"] {
            position: relative !important;

            &::before,
            &::after {
                content: '' !important;
                display: block !important;
                position: absolute !important;
                pointer-events: none !important;
            }
        }

        // Force show decorative elements
        &::before,
        &::after {
            opacity: 1 !important;
            visibility: visible !important;
        }
    }

    // Toggle visibility based on settings
    .flashcard-inner.is-flipped {
        .flashcard-front {
            display: none;
        }

        .flashcard-back {
            display: block;
        }
    }

    // Block editor styles
    .block-editor-block-list__layout {
        min-height: 200px;
        display: flex;
        flex-direction: column;
        gap: 1rem;

        .wp-block-heading {
            margin: 0;
        }

        .wp-block-image {
            margin: 0;

            img {
                max-width: 100%;
                height: auto;
            }
        }

        .wp-block-buttons {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin: 1rem 0;
        }

        .wp-block-media-text {
            grid-template-columns: 40% 1fr;
            gap: 1rem;
        }
    }

    .block-editor-block-list__block {

        &.is-selected,
        &.has-child-selected {
            outline: 2px solid #007cba;
        }
    }
}

// Editor-only styles
.editor-styles-wrapper {
    .wp-block-smfcs-flashcard {
        width: var(--flashcard-width, 100%);
        margin: 0 auto;
        box-sizing: border-box;
        position: relative;

        // Remove ALL transforms and 3D effects
        transform-style: flat !important;
        perspective: none !important;

        .flashcard-inner {
            position: relative;
            width: 100%;
            background: transparent;
            padding: 16px;
            // Remove ALL transforms
            transform: none !important;
            transform-style: flat !important;
            perspective: none !important;
        }

        // Front and back sides in editor - simplified display
        .wp-block-smfcs-flashcard-front,
        .wp-block-smfcs-flashcard-back {
            position: relative;
            width: 100%;
            min-height: 200px;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 2rem;
            box-sizing: border-box;
            background: #fff;

            // Remove ALL transforms and related properties
            transform: none !important;
            transform-style: flat !important;
            perspective: none !important;
            backface-visibility: visible !important;

            // Ensure all nested content has no transforms
            * {
                transform: none !important;
                transform-style: flat !important;
                perspective: none !important;
                backface-visibility: visible !important;
            }
        }

        // Simple show/hide without any transforms
        &:has(.flashcard-inner.flashcard-front) {
            .wp-block-smfcs-flashcard-front {
                display: block;
            }

            .wp-block-smfcs-flashcard-back {
                display: none;
            }
        }

        &:has(.flashcard-inner.flashcard-back) {
            .wp-block-smfcs-flashcard-front {
                display: none;
            }

            .wp-block-smfcs-flashcard-back {
                display: block;
            }
        }

        // Block editor content styles
        .block-editor-block-list__layout {
            min-height: 200px;
            display: flex;
            flex-direction: column;
            gap: 1rem;

            // Remove transforms from all block editor content
            * {
                transform: none !important;
                transform-style: flat !important;
                perspective: none !important;
                backface-visibility: visible !important;
            }

            .wp-block-heading {
                margin: 0;
            }

            .wp-block-image {
                margin: 0;

                img {
                    max-width: 100%;
                    height: auto;
                }
            }

            .wp-block-buttons {
                display: flex;
                justify-content: center;
                gap: 0.5rem;
                margin: 1rem 0;
            }

            .wp-block-media-text {
                grid-template-columns: 40% 1fr;
                gap: 1rem;
            }
        }

        // Selected block styles
        .block-editor-block-list__block {

            &.is-selected,
            &.has-child-selected {
                outline: 2px solid #007cba;
            }
        }
    }
}

// Target the root flashcard block element with maximum specificity
.editor-styles-wrapper [data-type="smfcs/flashcard"].wp-block-smfcs-flashcard {
    height: auto !important;
    min-height: auto !important;
    position: static !important;
    display: block !important;
    overflow: visible !important;

    // Ensure all parent containers respect content height
    >div {
        height: auto !important;
        min-height: auto !important;
        position: relative !important;
    }

    // Force all nested elements to respect height
    .flashcard,
    .flashcard-inner,
    .wp-block-smfcs-flashcard-front,
    .wp-block-smfcs-flashcard-back {
        height: auto !important;
        min-height: auto !important;
        position: relative !important;
    }
}

// Additional specificity for block editor
.block-editor-block-list__layout [data-type="smfcs/flashcard"] {
    height: auto !important;
    min-height: auto !important;
    position: static !important;
}